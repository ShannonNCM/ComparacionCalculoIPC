(nchar(grupo_codigo) == 2 & grupo_nombre == "Grupo") ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 1 ~ paste0("0", grupo_codigo),
TRUE ~ grupo_codigo))
ponderaciones %>%
select(region_id, grupo_codigo, tipo_grupo, grupo_nombre) %>%
mutate(grupo_codigo = as.character(grupo_codigo)) %>%
mutate(grupo_codigo = case_when(
#nchar(grupo_codigo) == 6 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 4 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 3 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
nchar(grupo_codigo) == 2 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 1 ~ paste0("0", grupo_codigo),
TRUE ~ grupo_codigo))
ponderaciones %>%
select(region_id, grupo_codigo, tipo_grupo, grupo_nombre) %>%
mutate(grupo_codigo = as.character(grupo_codigo)) %>%
mutate(grupo_codigo = case_when(
#nchar(grupo_codigo) == 6 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 4 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 3 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
nchar(grupo_codigo) == 2 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 1 ~ paste0("0", grupo_codigo),
TRUE ~ grupo_codigo))
ponderaciones %>%
select(region_id, grupo_codigo, tipo_grupo, grupo_nombre) %>%
mutate(grupo_codigo = as.character(grupo_codigo)) %>%
mutate(grupo_codigo = case_when(
#nchar(grupo_codigo) == 6 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 4 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 3 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
nchar(grupo_codigo) == 2 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 1 ~ paste0("0", grupo_codigo),
TRUE ~ grupo_codigo)) %>%
filter(tipo_grupo == "Grupo")
ponderaciones %>%
select(region_id, grupo_codigo, tipo_grupo, grupo_nombre) %>%
mutate(grupo_codigo = as.character(grupo_codigo)) %>%
mutate(grupo_codigo = case_when(
#nchar(grupo_codigo) == 6 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 4 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 3 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
nchar(grupo_codigo) == 2 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 1 ~ paste0("0", grupo_codigo),
TRUE ~ grupo_codigo))
View(pon_prod)
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada subclase por cada region y los indices anteriores
pon_subclase <- pondcat("Sub Clase") %>%
rename(cod_subclase = grupo_codigo)
#Aqui tengo las ponderaciones para cada clase por cada region y los indices anteriores
pon_clase <- pondcat("Clase") %>%
rename(cod_clase = grupo_codigo)
#Aqui tengo las ponderaciones para cada Grupo por cada region y los indices anteriores
pon_grupo <- pondcat("Grupo") %>%
rename(cod_grupo = grupo_codigo)
#Aqui tengo las ponderaciones para cada divison por cada region y los indices anteriores
pon_div <- pondcat("División") %>%
rename(cod_div = grupo_codigo)
View(pon_subclase)
View(pon_grupo)
ponderaciones %>%
select(region_id, grupo_codigo, tipo_grupo, grupo_nombre) %>%
mutate(grupo_codigo = as.character(grupo_codigo)) %>%
mutate(grupo_codigo = case_when(
#nchar(grupo_codigo) == 6 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 4 ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 3 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
nchar(grupo_codigo) == 2 & grupo_nombre == "Grupo" ~ paste0("0", grupo_codigo),
#nchar(grupo_codigo) == 1 ~ paste0("0", grupo_codigo),
TRUE ~ grupo_codigo))
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada subclase por cada region y los indices anteriores
pon_subclase <- pondcat("Sub Clase") %>%
rename(cod_subclase = grupo_codigo) %>%
mutate(cod_subclase = ifelse(nchar(cod_subclase) == 4, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada subclase por cada region y los indices anteriores
pon_subclase <- pondcat("Sub Clase") %>%
rename(cod_subclase = grupo_codigo) %>%
mutate(cod_subclase = ifelse(nchar(cod_subclase) == 4, paste0("0", cod_subclase), cod_subclase))
#Aqui tengo las ponderaciones para cada clase por cada region y los indices anteriores
pon_clase <- pondcat("Clase") %>%
rename(cod_clase = grupo_codigo)
#Aqui tengo las ponderaciones para cada Grupo por cada region y los indices anteriores
pon_grupo <- pondcat("Grupo") %>%
rename(cod_grupo = grupo_codigo)
#Aqui tengo las ponderaciones para cada divison por cada region y los indices anteriores
pon_div <- pondcat("División") %>%
rename(cod_div = grupo_codigo)
View(pon_clase)
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada subclase por cada region y los indices anteriores
pon_subclase <- pondcat("Sub Clase") %>%
rename(cod_subclase = grupo_codigo) %>%
mutate(cod_subclase = ifelse(nchar(cod_subclase) == 4, paste0("0", cod_subclase), cod_subclase))
#Aqui tengo las ponderaciones para cada clase por cada region y los indices anteriores
pon_clase <- pondcat("Clase") %>%
rename(cod_clase = grupo_codigo) %>%
mutate(cod_clase = ifelse(nchar(cod_clase) == 3, paste0("0", cod_clase), cod_clase))
#Aqui tengo las ponderaciones para cada Grupo por cada region y los indices anteriores
pon_grupo <- pondcat("Grupo") %>%
rename(cod_grupo = grupo_codigo)
#Aqui tengo las ponderaciones para cada divison por cada region y los indices anteriores
pon_div <- pondcat("División") %>%
rename(cod_div = grupo_codigo)
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada subclase por cada region y los indices anteriores
pon_subclase <- pondcat("Sub Clase") %>%
rename(cod_subclase = grupo_codigo) %>%
mutate(cod_subclase = ifelse(nchar(cod_subclase) == 4, paste0("0", cod_subclase), cod_subclase))
#Aqui tengo las ponderaciones para cada clase por cada region y los indices anteriores
pon_clase <- pondcat("Clase") %>%
rename(cod_clase = grupo_codigo) %>%
mutate(cod_clase = ifelse(nchar(cod_clase) == 3, paste0("0", cod_clase), cod_clase))
#Aqui tengo las ponderaciones para cada Grupo por cada region y los indices anteriores
pon_grupo <- pondcat("Grupo") %>%
rename(cod_grupo = grupo_codigo) %>%
mutate(cod_grupo = ifelse(nchar(cod_grupo) == 4, paste0("0", cod_grupo), cod_grupo))
#Aqui tengo las ponderaciones para cada divison por cada region y los indices anteriores
pon_div <- pondcat("División") %>%
rename(cod_div = grupo_codigo) %>%
mutate(cod_div = ifelse(nchar(cod_div) == 4, paste0("0", cod_div), cod_div))
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada subclase por cada region y los indices anteriores
pon_subclase <- pondcat("Sub Clase") %>%
rename(cod_subclase = grupo_codigo) %>%
mutate(cod_subclase = ifelse(nchar(cod_subclase) == 4, paste0("0", cod_subclase), cod_subclase))
#Aqui tengo las ponderaciones para cada clase por cada region y los indices anteriores
pon_clase <- pondcat("Clase") %>%
rename(cod_clase = grupo_codigo) %>%
mutate(cod_clase = ifelse(nchar(cod_clase) == 3, paste0("0", cod_clase), cod_clase))
#Aqui tengo las ponderaciones para cada Grupo por cada region y los indices anteriores
pon_grupo <- pondcat("Grupo") %>%
rename(cod_grupo = grupo_codigo) %>%
mutate(cod_grupo = ifelse(nchar(cod_grupo) == 2, paste0("0", cod_grupo), cod_grupo))
#Aqui tengo las ponderaciones para cada divison por cada region y los indices anteriores
pon_div <- pondcat("División") %>%
rename(cod_div = grupo_codigo) %>%
mutate(cod_div = ifelse(nchar(cod_div) == 1, paste0("0", cod_div), cod_div))
View(pon_grupo)
View(pon_div)
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada subclase por cada region y los indices anteriores
pon_subclase <- pondcat("Sub Clase") %>%
rename(cod_subclase = grupo_codigo) %>%
mutate(cod_subclase = ifelse(nchar(cod_subclase) == 4, paste0("0", cod_subclase), cod_subclase))
#Aqui tengo las ponderaciones para cada clase por cada region y los indices anteriores
pon_clase <- pondcat("Clase") %>%
rename(cod_clase = grupo_codigo) %>%
mutate(cod_clase = ifelse(nchar(cod_clase) == 3, paste0("0", cod_clase), cod_clase))
#Aqui tengo las ponderaciones para cada Grupo por cada region y los indices anteriores
pon_grupo <- pondcat("Grupo") %>%
rename(cod_grupo = grupo_codigo) %>%
mutate(cod_grupo = ifelse(nchar(cod_grupo) == 2, paste0("0", cod_grupo), cod_grupo))
#Aqui tengo las ponderaciones para cada divison por cada region y los indices anteriores
pon_div <- pondcat("División") %>%
rename(cod_div = grupo_codigo) %>%
mutate(cod_div = ifelse(nchar(cod_div) == 1, paste0("0", cod_div), cod_div))
bol01 <- variacion(bol)
boletas01test %>%
select(region, cod_prod, codigo_articulo, articulo, var_prod)
bol01 <- variacion(bol)
bol01 %>%
select(region, cod_prod, codigo_articulo, articulo, var_prod)
View(bol)
bol01 <- variacion(bol)
bol01 %>%
select(region, cod_prod, codigo_articulo, articulo, var_prod)
bol01 <- variacion(bol)
bol01 %>%
select(region, cod_prod, codigo_articulo, articulo, var_prod)
relativo <- bol01 %>%
group_by(region, cod_prod) %>%
summarize(relativo = geometric.mean(var_prod)) %>%
left_join(pon_reg %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo),
by = c("region", "cod_prod")) %>%
select(region, cod_prod, grupo_nombre, relativo, ponderacion_region, indice_grupo)
relativo <- bol01 %>%
group_by(region, cod_prod) %>%
summarize(relativo = geometric.mean(var_prod)) %>%
left_join(pon_prod %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo),
by = c("region", "cod_prod")) %>%
select(region, cod_prod, grupo_nombre, relativo, ponderacion_region, indice_grupo)
View(relativo)
relativo <- bol01 %>%
group_by(region, cod_prod) %>%
summarize(relativo = geometric.mean(var_prod)) %>%
left_join(pon_prod %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo),
by = c("region", "cod_prod")) %>%
select(region, cod_prod, grupo_nombre, relativo, ponderacion_region, indice_grupo)
#sacamos la variacion acumulada, que es la suma producto de los relativos y sus ponderadores
varacum <- relativo %>%
group_by(region, cod_prod, grupo_nombre) %>%
summarize(var_ac = sum(relativo*ponderacion_region))
#suma de los ponderadores
suma_pon <- relativo %>%
group_by(region, cod_prod, grupo_nombre) %>%
summarize(sum_pon = sum(ponderacion_region))
#el promedio ponderado es la division de la variacion acumulada por la suma de los ponderadores
prom_pond <- varacum %>%
select(region, cod_prod, grupo_nombre, var_ac, ) %>%
left_join(suma_pon, by = c("region", "cod_prod", "grupo_nombre")) %>%
mutate(prom_pon = var_ac/sum_pon) %>%
left_join(test %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo), by = c("region", "cod_prod", "grupo_nombre"))
#el promedio ponderado es la division de la variacion acumulada por la suma de los ponderadores
prom_pond <- varacum %>%
select(region, cod_prod, grupo_nombre, var_ac, ) %>%
left_join(suma_pon, by = c("region", "cod_prod", "grupo_nombre")) %>%
mutate(prom_pon = var_ac/sum_pon) %>%
left_join(relativo %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo), by = c("region", "cod_prod", "grupo_nombre"))
View(prom_pond)
ind_prod <- prom_pond %>%
mutate(ind_prod = indice_grupo*prom_pon)
test01 %>%
filter(grupo_nombre == "Arroz") #estas ultimas dos lineas son solamente para visualizar algunos datos
ind_prod <- prom_pond %>%
mutate(ind_prod = indice_grupo*prom_pon)
ind_prod %>%
filter(grupo_nombre == "Arroz") #estas ultimas dos lineas son solamente para visualizar algunos datos
ind_prod <- prom_pond %>%
mutate(ind_prod = indice_grupo*prom_pon)
#ind_prod %>%
#  filter(grupo_nombre == "Arroz") #estas ultimas dos lineas son solamente para visualizar algunos datos
View(ind_prod)
ind_prod <- prom_pond %>%
mutate(ind_prod = indice_grupo*prom_pon)
#ind_prod %>%
#  filter(grupo_nombre == "Arroz") #estas ultimas dos lineas son solamente para visualizar algunos datos
View(ind_prod)
library("readxl")
library("tidyverse")
require("tidyverse")
library("writexl")
library("tibble")
library("openxlsx")
library("DBI")
library("odbc")
library("RSQLite")
library("psych")
library("pracma")
library("bit64")
source("funciones_ipc.R")
ipd(pon_subclase,participacion)
ipc(pon_subclase,participacion)
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
#Aqui tengo las ponderaciones para cada subclase por cada region y los indices anteriores
pon_subclase <- pondcat("Sub Clase") %>%
mutate(grupo_codigo = ifelse(nchar(grupo_codigo) == 4, paste0("0", grupo_codigo), grupo_codigo))
#Aqui tengo las ponderaciones para cada clase por cada region y los indices anteriores
pon_clase <- pondcat("Clase") %>%
mutate(grupo_codigo = ifelse(nchar(grupo_codigo) == 3, paste0("0", grupo_codigo), grupo_codigo))
#Aqui tengo las ponderaciones para cada Grupo por cada region y los indices anteriores
pon_grupo <- pondcat("Grupo") %>%
mutate(grupo_codigo = ifelse(nchar(grupo_codigo) == 2, paste0("0", grupo_codigo), grupo_codigo))
#Aqui tengo las ponderaciones para cada divison por cada region y los indices anteriores
pon_div <- pondcat("División") %>%
mutate(grupo_codigo = ifelse(nchar(grupo_codigo) == 1, paste0("0", grupo_codigo), grupo_codigo))
library("readxl")
library("tidyverse")
require("tidyverse")
library("writexl")
library("tibble")
library("openxlsx")
library("DBI")
library("odbc")
library("RSQLite")
library("psych")
library("pracma")
library("bit64")
source("funciones_ipc.R")
ipc(pon_subclase,participacion)
ipc(pon_subclase,participacion)
ipc(pon_clase, participacion)
pon_clase %>%
filter(region != 0) %>%
left_join(participacion, by ="region") %>%
group_by(region, cod_clase, grupo_nombre) %>%
summarize(sum1 = sum(ponderacion_region*participacion), sum2 = sum(ponderacion_region*participacion*indice_grupo)) %>%
mutate(ind_clase = sum2/sum1) %>%
select(region, cod_clase, grupo_nombre, ind_clase)
ipc(pon_subclase,participacion)
ipc(pon_clase, participacion)
ipc(pon_grupo, participacion)
ipc(pon_subclase,participacion)
ipc(pon_clase, participacion)
ipc(pon_grupo, participacion)
ipc(pon_div, participacion)
pon_div %>%
filter(region != 0) %>%
left_join(participacion, by ="region") %>%
group_by(region) %>%
summarize(sum1 = sum(ponderacion_region*participacion), sum2 = sum(ponderacion_region*participacion*indice_grupo)) %>%
mutate(ind = sum2/sum1) #%>%
#select(region, ind_div)
ipc(pon_subclase,participacion)
ipc(pon_clase, participacion)
ipc(pon_grupo, participacion)
ipc(pon_div, participacion)
test01 %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
mutate(ind_prod_rep = sumapond/sumprod) %>%
select(cod_prod, grupo_nombre, ind_prod_rep)
View(bol01)
relativo %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
mutate(ind_prod_rep = sumapond/sumprod) %>%
select(cod_prod, grupo_nombre, ind_prod_rep)
View(relativo)
bol01 %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
mutate(ind_prod_rep = sumapond/sumprod) %>%
select(cod_prod, grupo_nombre, ind_prod_rep)
View(suma_pon)
View(bol01)
View(relativo)
relativo %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
mutate(ind_prod_rep = sumapond/sumprod) %>%
select(cod_prod, grupo_nombre, ind_prod_rep)
View(varacum)
View(prom_pond)
prom_pond %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
mutate(ind_prod_rep = sumapond/sumprod) %>%
select(cod_prod, grupo_nombre, ind_prod_rep)
View(prom_pond)
View(prom_pond)
View(prom_pond)
View(prom_pond)
prom_pond %>%
left_join(participacion, by = c("region")) #%>%
#mutate(new_col = ponderacion_region*participacion*ind_prod) %>%
#group_by(cod_prod, grupo_nombre) %>%
#summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
#mutate(ind_prod_rep = sumapond/sumprod) %>%
#select(cod_prod, grupo_nombre, ind_prod_rep)
prom_pond %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) #%>%
prom_pond %>%
left_join(participacion, by = c("region")) #%>%
#mutate(new_col = ponderacion_region*participacion*ind_prod) #%>%
#group_by(cod_prod, grupo_nombre) %>%
#summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
#mutate(ind_prod_rep = sumapond/sumprod) %>%
#select(cod_prod, grupo_nombre, ind_prod_rep)
prom_pond %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) #%>%
View(prom_pond)
View(varacum)
View(suma_pon)
View(ind_prod)
ind_prod %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) #%>%
#group_by(cod_prod, grupo_nombre) %>%
#summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
#mutate(ind_prod_rep = sumapond/sumprod) %>%
#select(cod_prod, grupo_nombre, ind_prod_rep)
ind_prod %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
mutate(ind_prod_rep = sumapond/sumprod) %>%
select(cod_prod, grupo_nombre, ind_prod_rep)
View(pon_subclase)
library("readxl")
library("tidyverse")
require("tidyverse")
library("writexl")
library("tibble")
library("openxlsx")
library("DBI")
library("odbc")
library("RSQLite")
library("psych")
library("pracma")
library("bit64")
source("funciones_ipc.R")
ipc_nac(pon_subclase,participacion)
ipc_nac(pon_subclase,participacion)
ipc_nac(pon_clase,participacion)
ipc_nac(pon_grupo,participacion)
ipc_nac(pon_div,participacion)
library("readxl")
library("tidyverse")
require("tidyverse")
library("writexl")
library("tibble")
library("openxlsx")
library("DBI")
library("odbc")
library("RSQLite")
library("psych")
library("pracma")
library("bit64")
source("funciones_ipc.R")
ipc_nac(pon_subclase,participacion)
ipc_nac(pon_clase,participacion)
ipc_nac(pon_grupo,participacion)
ipc_nac(pon_div,participacion)
pon_div %>%
filter(region != 0) %>%
left_join(participacion, by ="region") %>%
group_by(region) %>%
summarize(sum1 = sum(ponderacion_region*participacion), sum2 = sum(ponderacion_region*participacion*indice_grupo)) %>%
mutate(ind = sum2/sum1)
pon_div %>%
filter(region != 0) %>%
left_join(participacion, by ="region") %>%
group_by(region) %>%
summarize(sum1 = sum(ponderacion_region*participacion), sum2 = sum(ponderacion_region*participacion*indice_grupo)) %>%
mutate(ind = sum2/sum1) #%>%
#select(region, ind)
ipc_nac(pon_subclase,participacion)
ipc_nac(pon_clase,participacion)
ipc_nac(pon_grupo,participacion)
ipc_nac(pon_div,participacion)
ipc(pon_subclase,participacion)
ipc(pon_clase, participacion)
ipc(pon_grupo, participacion)
ipc(pon_div, participacion)
pon_div %>%
filter(region != 0) %>%
left_join(participacion, by ="region") %>%
group_by(region) %>%
summarize(sum1 = sum(ponderacion_region*participacion), sum2 = sum(ponderacion_region*participacion*indice_grupo)) %>%
mutate(ind = sum2/sum1) #%>%
#select(region, ind)
pon_div %>%
filter(region != 0) %>%
left_join(participacion, by ="region") %>%
group_by(region) %>%
summarize(sum1 = sum(ponderacion_region*participacion), sum2 = sum(ponderacion_region*participacion*indice_grupo)) %>%
mutate(ind = sum2/sum1) %>%
select(region, ind)
View(boletas)
View(ponderaciones)
mes <- 1
ano <- 2024
#crea un string completo para conectarse a la base de datos
conn_str <- paste0("Driver={ODBC Driver 17 for SQL Server};",
"Server=", server, ";",
"Database=", database, ";",
"Uid=", user, ";",
"Pwd=", pas, ";"
)
View(ponderacionesmesant)
View(ponderaciones)
View(boletas)
View(bol)
View(ind_prod)
ipc(pon_subclase,participacion)
ipc(pon_clase, participacion)
ipc(pon_grupo, participacion)
ipc(pon_div, participacion)
ind_prod %>%
left_join(participacion, by = c("region")) %>%
mutate(new_col = ponderacion_region*participacion*ind_prod) %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sumprod = sum(ponderacion_region*participacion), sumapond = sum(new_col)) %>%
mutate(ind_prod_rep = sumapond/sumprod) %>%
select(cod_prod, grupo_nombre, ind_prod_rep)
ipc_nac(pon_subclase,participacion)
ipc_nac(pon_clase,participacion)
ipc_nac(pon_grupo,participacion)
ipc_nac(pon_div,participacion)
View(ponderaciones)
rm(ano, mes)
View(bol)
View(ponderacionesmesant)
