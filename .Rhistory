mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
#indover150 <-
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
#filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
#filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
#write.xlsx(indover150, "indicessobre150_012024.xlsx")
ind_prod %>%
select(region, cod_subclase, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_subclase) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2)
ind_prod %>%
select(region, cod_clase, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_clase) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2) #%>%
#filter(grupo_codigo == "0111")
#el "problema" aqui es que el count esta contando todos todos los que se usaron, porque estoy yendo desde la base de datos de los productos, que si coindicen al menos para el arroz, excepto en la region 7 que me salen solo 15 :O
ind_prod %>%
select(region, cod_grupo, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_grupo) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2) #%>%
#filter(grupo_codigo == "011")
#ind_div <-
ind_prod %>%
select(region, cod_div, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_div) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2) #%>%
#select(region, grupo_codigo, ind)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro2", ind_div)
ind_prod %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind_prod_rep = sum1/sum2)
ind_prod %>%
group_by(cod_subclase) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind_prod_rep = sum1/sum2)
ind_prod %>%
group_by(cod_clase) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2)
ind_prod %>%
group_by(cod_grupo) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2)
ind_prod %>%
group_by(cod_div) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2)
#ind_gen <-
ind_prod %>%
group_by(region) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2) #%>%
#select(region, ind_prod_rep)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro3", ind_gen)
ind_prod %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(indrep = sum1/sum2)
ind_prod <- prom_pon %>%
mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
#indover150 <-
ind_prod %>%
select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
#filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
#write.xlsx(indover150, "indicessobre150_012024.xlsx")
ind_prod <- prom_pon %>%
mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
#indover150 <-
ind_prod %>%
select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
#filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
#write.xlsx(indover150, "indicessobre150_012024.xlsx")
bol %>%
filter(cod_prod == "0441201") #%>%
#filter(cod_prod == "0116104")
#aqui estoy revisando los datos de las boletas que tienen precios extraños que modifican el indice de los productos
bol <- boletas %>%
select(region, codigo_articulo, articulo, cantidad_anterior, cantidad_actual, precio_anterior, precio_actual) %>%
mutate(cod_prod = substr(codigo_articulo, 1, ifelse(nchar(codigo_articulo) > 8, nchar(codigo_articulo) - 2, nchar(codigo_articulo) - 1)), .before = codigo_articulo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod)) #%>%
#mutate(cantidad_actual = cantidad_anterior) %>%
#mutate(precio_actual = precio_anterior) # estas dos ultimas filas no irian en la de verdad esto es solo para la prueba
sum(is.na(bol)) #esto es el numero de datos faltantes en las boletas
bol %>%
filter(cod_prod == "0441201") #%>%
#filter(cod_prod == "0116104")
#aqui estoy revisando los datos de las boletas que tienen precios extraños que modifican el indice de los productos
bol %>%
filter(cod_prod == "0441201") #%>%
#filter(cod_prod == "0116104")
#aqui estoy revisando los datos de las boletas que tienen precios extraños que modifican el indice de los productos
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
bol01 <- variacion(bol) %>%
drop_na()
bol01 %>%
select(region, cod_prod, codigo_articulo, articulo, var_prod)
#sum(is.na(bol01))
bol01 <- variacion(bol) %>%
drop_na()
bol01 %>%
select(region, cod_prod, codigo_articulo, articulo, var_prod)
#sum(is.na(bol01))
relativo <- bol01 %>%
group_by(region, cod_prod) %>%
summarize(relativo = geometric.mean(var_prod)) %>%
left_join(pon_prod %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo),
by = c("region", "cod_prod")) %>%
select(region, cod_prod, grupo_nombre, relativo, ponderacion_region, indice_grupo)
prom_pon <- relativo %>%
group_by(region, cod_prod, grupo_nombre) %>%
summarize(var_ac = sum(relativo*ponderacion_region),
sum_pon = sum(ponderacion_region)) %>%
mutate(prom_pon = var_ac/sum_pon) %>%
left_join(relativo %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo), by = c("region", "cod_prod", "grupo_nombre"))
ind_prod <- prom_pon %>%
mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
#indover150 <-
ind_prod %>%
select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
#filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
#write.xlsx(indover150, "indicessobre150_012024.xlsx")
ind_prod <- prom_pon %>%
mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
#indover150 <-
ind_prod %>%
select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
#filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
#write.xlsx(indover150, "indicessobre150_012024.xlsx")
ind_prod %>%
select(region, cod_subclase, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_subclase) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2)
ind_prod %>%
select(region, cod_subclase, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_subclase) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2)
ind_prod %>%
select(region, cod_clase, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_clase) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2) #%>%
#filter(grupo_codigo == "0111")
#el "problema" aqui es que el count esta contando todos todos los que se usaron, porque estoy yendo desde la base de datos de los productos, que si coindicen al menos para el arroz, excepto en la region 7 que me salen solo 15 :O
ind_prod %>%
select(region, cod_grupo, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_grupo) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2) #%>%
#filter(grupo_codigo == "011")
#ind_div <-
ind_prod %>%
select(region, cod_div, grupo_nombre, ponderacion_region, ind_prod) %>%
rename(grupo_codigo = cod_div) %>%
group_by(region, grupo_codigo) %>%
summarize(sum1 = sum(ind_prod*ponderacion_region),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind = sum1/sum2) #%>%
#select(region, grupo_codigo, ind)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro2", ind_div)
ind_prod %>%
group_by(cod_prod, grupo_nombre) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind_prod_rep = sum1/sum2)
ind_prod %>%
group_by(cod_subclase) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region),
count = n()) %>%
mutate(ind_prod_rep = sum1/sum2)
ind_prod %>%
group_by(cod_clase) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2)
ind_prod %>%
group_by(cod_grupo) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2)
ind_prod %>%
group_by(cod_div) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2)
#ind_gen <-
ind_prod %>%
group_by(region) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2) #%>%
#select(region, ind_prod_rep)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro3", ind_gen)
ind_prod %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(indrep = sum1/sum2)
bol %>%
filter(cod_prod == "0611107") #%>%
#filter(cod_prod == "0116104")
#aqui estoy revisando los datos de las boletas que tienen precios extraños que modifican el indice de los productos
ind_prod <- prom_pon %>%
mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
#indover150 <-
ind_prod %>%
select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
#filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
#write.xlsx(indover150, "indicessobre150_012024.xlsx")
ind_prod <- prom_pon %>%
mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
indover150 <- ind_prod %>%
select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
#filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
write.xlsx(indover150, "indicessobre150_012024.xlsx")
View(indover150)
bol %>%
filter(cod_prod == "0118901") #%>%
#filter(cod_prod == "0116104")
#aqui estoy revisando los datos de las boletas que tienen precios extraños que modifican el indice de los productos
bol <- boletas %>%
select(region, codigo_articulo, articulo, cantidad_anterior, cantidad_actual, precio_anterior, precio_actual) %>%
mutate(cod_prod = substr(codigo_articulo, 1, ifelse(nchar(codigo_articulo) > 8, nchar(codigo_articulo) - 2, nchar(codigo_articulo) - 1)), .before = codigo_articulo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod)) #%>%
#mutate(cantidad_actual = cantidad_anterior) %>%
#mutate(precio_actual = precio_anterior) # estas dos ultimas filas no irian en la de verdad esto es solo para la prueba
sum(is.na(bol)) #esto es el numero de datos faltantes en las boletas
sum(is.na(bol)) #esto es el numero de datos faltantes en las boletas
bol %>%
filter(cod_prod == "0118901") #%>%
#filter(cod_prod == "0116104")
#aqui estoy revisando los datos de las boletas que tienen precios extraños que modifican el indice de los productos
bol01 <- variacion(bol) %>%
drop_na()
bol01 %>%
select(region, cod_prod, codigo_articulo, articulo, var_prod)
#sum(is.na(bol01))
relativo <- bol01 %>%
group_by(region, cod_prod) %>%
summarize(relativo = geometric.mean(var_prod)) %>%
left_join(pon_prod %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo),
by = c("region", "cod_prod")) %>%
select(region, cod_prod, grupo_nombre, relativo, ponderacion_region, indice_grupo)
prom_pon <- relativo %>%
group_by(region, cod_prod, grupo_nombre) %>%
summarize(var_ac = sum(relativo*ponderacion_region),
sum_pon = sum(ponderacion_region)) %>%
mutate(prom_pon = var_ac/sum_pon) %>%
left_join(relativo %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo), by = c("region", "cod_prod", "grupo_nombre"))
ind_prod <- prom_pon %>%
mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
#indover150 <-
ind_prod %>%
select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
#filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
#write.xlsx(indover150, "indicessobre150_012024.xlsx")
ind_prod %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(indrep = sum1/sum2)
ind_prod %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(indrep = sum1/sum2)
#ind_gen <-
ind_prod %>%
group_by(region) %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(ind_prod_rep = sum1/sum2) #%>%
#select(region, ind_prod_rep)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro3", ind_gen)
dbDisconnect(con)
library("readxl")
library("tidyverse")
require("tidyverse")
library("writexl")
library("tibble")
library("openxlsx")
library("DBI")
library("odbc")
library("RSQLite")
library("psych")
library("pracma")
library("bit64")
source("funciones_ipc.R")
server <- 'inegt-ipc.database.windows.net'
user <- 'ipcuser_exec'
pas <- 'In3/*ipc2023'
database <- 'db-indices'
#crea un string completo para conectarse a la base de datos
conn_str <- paste0("Driver={ODBC Driver 17 for SQL Server};",
"Server=", server, ";",
"Database=", database, ";",
"Uid=", user, ";",
"Pwd=", pas, ";"
)
con <- dbConnect(odbc::odbc(), .connection_string=conn_str)
#un mini df que tiene la participacion de las regiones
participacion <- data.frame(region = c(1,2,3,4,5,6,7,8),
participacion = c(29.79,6.98,7.77,20.41,8.01,11.97,11.38,3.69)) %>%
mutate(region = as.integer64(region))
dbDisconnect(con)
bol <- boletas %>%
select(region, codigo_articulo, articulo, cantidad_anterior, cantidad_actual, precio_anterior, precio_actual) %>%
mutate(cod_prod = substr(codigo_articulo, 1, ifelse(nchar(codigo_articulo) > 8, nchar(codigo_articulo) - 2, nchar(codigo_articulo) - 1)), .before = codigo_articulo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod)) #%>%
#mutate(cantidad_actual = cantidad_anterior) %>%
#mutate(precio_actual = precio_anterior) # estas dos ultimas filas no irian en la de verdad esto es solo para la prueba
View(bol)
sum(is.na(bol)) #esto es el numero de datos faltantes en las boletas
bol %>%
filter(cod_prod == "0118901") #%>%
#filter(cod_prod == "0116104")
#aqui estoy revisando los datos de las boletas que tienen precios extraños que modifican el indice de los productos
#Aqui tengo las ponderaciones para cada produto por cada region y los indices anteriores
pon_prod <- pondcat("Producto") %>%
rename(cod_prod = grupo_codigo) %>%
mutate(cod_prod = ifelse(nchar(cod_prod) == 6, paste0("0", cod_prod), cod_prod))
bol01 <- variacion(bol) %>%
drop_na()
bol01 %>%
select(region, cod_prod, codigo_articulo, articulo, var_prod)
#sum(is.na(bol01))
relativo <- bol01 %>%
group_by(region, cod_prod) %>%
summarize(relativo = geometric.mean(var_prod)) %>%
left_join(pon_prod %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo),
by = c("region", "cod_prod")) %>%
select(region, cod_prod, grupo_nombre, relativo, ponderacion_region, indice_grupo)
prom_pon <- relativo %>%
group_by(region, cod_prod, grupo_nombre) %>%
summarize(var_ac = sum(relativo*ponderacion_region),
sum_pon = sum(ponderacion_region)) %>%
mutate(prom_pon = var_ac/sum_pon) %>%
left_join(relativo %>% select(region, cod_prod, grupo_nombre, ponderacion_region, indice_grupo), by = c("region", "cod_prod", "grupo_nombre"))
ind_prod <- prom_pon %>%
mutate(ind_prod = indice_grupo*prom_pon) %>%
cod_grupos() %>%
drop_na() #utilice el dropna porque hay datos faltantes en las boletas
#ind_prod
#ind_prod %>%
#  select(region, cod_prod, grupo_nombre, sum_pon, prom_pon, ind_prod) %>%
#  filter(cod_prod == "0111102")
#indover150 <-
ind_prod %>%
select(region, cod_prod, grupo_nombre, var_ac, sum_pon, prom_pon, ponderacion_region, ind_prod) %>%
#filter(ind_prod > 1000) #%>%
#filter(ind_prod > 500) #%>%
#filter(ind_prod > 200)
filter(ind_prod > 150)
#ind_prod01 <- ind_prod %>%
#  select(region, cod_prod, ind_prod)
#se guardan los datos en el workbook
#writeData(indices, "Cuadro1", ind_prod01)
#write.xlsx(indover150, "indicessobre150_012024.xlsx")
ind_prod %>%
summarize(sum1 = sum(ponderacion_region*ind_prod),
sum2 = sum(ponderacion_region)) %>%
mutate(indrep = sum1/sum2)
